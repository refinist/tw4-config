/* https://dev.to/mrpaulishaili/vscode-intellisense-broken-in-tailwind-css-v4-heres-the-solution-4d5 */
@layer theme, base, components, utilities;
@import 'tailwindcss/theme.css' layer(theme);
@import 'tailwindcss/utilities.css' layer(utilities);

@layer theme {
  /* Custom safe area variables (do not set to 0, otherwise the calc calculation will be incorrect). Mainly to be compatible with Android devices that do not have the safe-area-inset-bottom variable. Because Android devices do not have the safe-area-inset-bottom variable, it will be 0, which will cause the calc calculation to be incorrect. */
  :root {
    --safe-area-inset-bottom-constant: 0.1px;
    --safe-area-inset-bottom-env: 0.1px;
    --saib-spacing: 0.25rem; /* 4px */
  }
  @supports (bottom: constant(safe-area-inset-bottom)) or
    (bottom: env(safe-area-inset-bottom)) {
    :root {
      --safe-area-inset-bottom-constant: constant(safe-area-inset-bottom);
      --safe-area-inset-bottom-env: env(safe-area-inset-bottom);
    }
  }
}

@layer utilities {
  /* flex-1 improvement */
  .flex-1 {
    flex: 1;
    min-width: 0;
  }
  .flex-col > .flex-1 {
    min-width: auto;
    min-height: 0;
  }

  /* Text overflow ellipsis aggregation */
  .text-overflow-ellipsis {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
  }

  /* safe-area-inset-bottom mobile safe area bottom padding */
  .saib-pb {
    padding-bottom: var(--safe-area-inset-bottom-constant);
    padding-bottom: var(--safe-area-inset-bottom-env);
    box-sizing: border-box;
  }

  .saib-mb {
    margin-bottom: var(--safe-area-inset-bottom-constant);
    margin-bottom: var(--safe-area-inset-bottom-env);
  }

  .saib-b {
    bottom: var(--safe-area-inset-bottom-constant);
    bottom: var(--safe-area-inset-bottom-env);
  }
}

@utility saib-pb-* {
  /* Arbitrary values */
  padding-bottom: calc(--value([*]) + var(--safe-area-inset-bottom-constant));
  padding-bottom: calc(--value([*]) + var(--safe-area-inset-bottom-env));

  /* Bare values */
  padding-bottom: calc(
    var(--saib-spacing) * --value(integer) +
      var(--safe-area-inset-bottom-constant)
  );
  padding-bottom: calc(
    var(--saib-spacing) * --value(integer) + var(--safe-area-inset-bottom-env)
  );

  box-sizing: border-box;
}

@utility saib-mb-* {
  /* Arbitrary values */
  margin-bottom: calc(--value([*]) + var(--safe-area-inset-bottom-constant));
  margin-bottom: calc(--value([*]) + var(--safe-area-inset-bottom-env));

  /* Bare values */
  margin-bottom: calc(
    var(--saib-spacing) * --value(integer) +
      var(--safe-area-inset-bottom-constant)
  );
  margin-bottom: calc(
    var(--saib-spacing) * --value(integer) + var(--safe-area-inset-bottom-env)
  );
}

@utility saib-b-* {
  /* Arbitrary values */
  bottom: calc(--value([*]) + var(--safe-area-inset-bottom-constant));
  bottom: calc(--value([*]) + var(--safe-area-inset-bottom-env));

  /* Bare values */
  bottom: calc(
    var(--saib-spacing) * --value(integer) +
      var(--safe-area-inset-bottom-constant)
  );
  bottom: calc(
    var(--saib-spacing) * --value(integer) + var(--safe-area-inset-bottom-env)
  );
}
